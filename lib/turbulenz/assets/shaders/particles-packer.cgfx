// Copyright (c) 2013-2014 Turbulenz Limited

sampler2D src = sampler_state
{
    MinFilter = Nearest;
    MagFilter = Nearest;
    WrapS = ClampToEdge;
    WrapT = ClampToEdge;
};

// dimension of input texture and destination rectangle in target
float2 dim;
float4 dst;

// border to leave around texture in target
float border;

void vp_pack(in float2 inPosition   : POSITION,
             out float4 outPosition : POSITION,
             out float2 outUV       : TEXCOORD0)
{
    float2 xy = dst.xy * 2.0 - 1.0;
    float2 wh = (dst.zw * 2.0 - 1.0) - xy;
    outPosition = float4(xy + wh * inPosition, 0, 1);
    // account for borders/shrinking.
    outUV = inPosition + ((inPosition * 2.0 - 1.0) * border / dim);
}

float4 fp_pack(float2 UV : TEXCOORD0) : COLOR
{
    return tex2D(src, UV);
}

technique pack
{
    pass
    {
        DepthTestEnable = false;
        DepthMask       = false;
        CullFaceEnable  = false;
        BlendEnable     = false;
        VertexProgram   = compile latest vp_pack();
        FragmentProgram = compile latest fp_pack();
    }
}
